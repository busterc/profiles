# Git aliases
alias gti="git init"
alias gtc="git clone"
alias gtp="git push"
alias gts="git status"
alias gtd="git diff"
alias gtco="git commit"
alias gta="git add"
alias gtpom="git push origin master"
alias gtdup="git fetch upstream && git diff master upstream/master"
alias gtrev="git remote -v"

# GitHub RESET TO UPSTREAM # Caution: this is destructive
alias gtreup="git fetch upstream && git checkout master && git reset --hard upstream/master && git push origin master --force"

# Rebase Workflow = gtur then gtpomm
alias gtur="git fetch upstream && git rebase upstream/master"
alias gtpomm="git push origin +master:master"

# GitHub Public API Rate Limit
alias ghrate="curl -s https://api.github.com/rate_limit"

# GitHub upstreaming
function upstreamhub() {
  if [[ $# -eq 0 ]]; then
    cat <<EOF
Usage: upstreamhub <organization|username>

  Description:
    Set the GitHub upstream for the current repo, by passing
    an organization or username

EOF
  else
    echo $PWD | sed 's#.*\/##' | xargs -I '{}' git remote add upstream git@github.com:$1/{}
  fi
}

# GitHub bulk clone repos for users or orgs
function cloghub() {
  : ${CLOGHUB_GITHUB_TOKEN?"Error: missing environment variable: CLOGHUB_GITHUB_TOKEN"}

  local userRepos="${CLOGHUB_GITHUB_TOKEN}:x-oauth-basic https://api.github.com/users/$2/repos"
  local orgRepos="${CLOGHUB_GITHUB_TOKEN}:x-oauth-basic https://api.github.com/orgs/$2/repos"
  local myRepos="${CLOGHUB_GITHUB_TOKEN}:x-oauth-basic https://api.github.com/user/repos"

  function usage() {
    cat <<EOF
Usage: cloghub [options]

  Description:
    Bulk clone GitHub repos by username or organization

  Options:

    -u  <username>      clones a specific user's public repos
    -o  <organization>  clones all accessible repos for an organization
    -me                 clones all of your own repos

EOF
  }

  if [[ $# -eq 0 ]]; then
    usage
  else
    case "$1" in
      -u)
        if [[ $# -lt 2 ]]; then
          printf >&2 "Error: a username is required\n\n"
          usage
        else
          curl -s -u ${CLOGHUB_GITHUB_TOKEN}:x-oauth-basic https://api.github.com/users/$2/repos?per_page=100 | grep ssh_url | sed 's#.*\"\: \"##' | sed 's#[,\"]##g' | xargs -n 1 git clone
        fi
        ;;
      -o)
        if [[ $# -lt 2 ]]; then
          printf >&2 "Error: an organization name is required\n\n"
          usage
        else
          curl -s -u ${CLOGHUB_GITHUB_TOKEN}:x-oauth-basic https://api.github.com/orgs/$2/repos?per_page=100 | grep ssh_url | sed 's#.*\"\: \"##' | sed 's#[,\"]##g' | xargs -n 1 git clone
        fi
        ;;
      -me)
        curl -s -u ${CLOGHUB_GITHUB_TOKEN}:x-oauth-basic https://api.github.com/user/repos?per_page=100 | grep ssh_url | sed 's#.*\"\: \"##' | sed 's#[,\"]##g' | xargs -n 1 git clone
        ;;
      *)
        usage
        ;;
    esac
  fi
}

# GitHub aliases

function ghc() {
	git clone git@github.com:$1
}
function ghcbc() {
	git clone git@github.com:busterc/$1
}
function ghchc() {
	git clone git@github.com:helpdotcom/$1
}
function ghcus() {
  git clone git@github.com:UserStyles/$1
}
function ghchj() {
  git clone git@github.com:HyperJSON/$1
}

# BitBucket aliases

function bbc() {
	git clone git@bitbucket.org:$1
}
function bbcbc() {
	git clone git@bitbucket.org:busterc/$1
}
function bbchc() {
	git clone git@bitbucket.org:helpdotcom/$1
}

# Git Power Functions

# Run Git-Diff on Upstream for all immediate subdirectories
function gtdups() {
  for d in $(find . -name ".git" -maxdepth 2); do
  hr
  cd $d/..
  echo "processing $d ...";
  git fetch upstream && git diff master upstream/master
  cd - &>/dev/null; done
}

# Run Git-Status on all immediate subdirectories
function gtss() {
  for d in $(find . -name ".git" -maxdepth 2); do
  hr
  cd $d/..
  echo "processing $d ...";
  git status
  cd - &>/dev/null; done
}

# Run Git Pull on all immediate subdirectories
function gtps() {
  for d in $(find . -name ".git" -maxdepth 2); do
  hr
  cd $d/..
  echo "processing $d ...";
  git pull
  cd - &>/dev/null; done
}
