#!/bin/bash

# INTENDED FOR: OSX

# MacPorts Installer addition on 2013-01-15_at_22:34:03: adding an appropriate PATH variable for use with MacPorts.
export PATH=/opt/local/bin:/opt/local/sbin:$PATH

## Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

# Sublime as editor, when possible
export EDITOR="subl"

# Android Developer Tools SDK
export ANDROID_HOME="$HOME/bin/adt-bundle-mac-x86_64-20140702/sdk"
export PATH="$ANDROID_HOME/platform-tools:$ANDROID_HOME/tools:$PATH"

# Open Chrome from terminal
alias chrome="open /Applications/Google\ Chrome.app"

# start iOS simulator from terminal
alias ios="open /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Applications/iPhone\ Simulator.app"

# Show/hide hidden files in Finder
alias show="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
alias hide="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"

# Open finder to Sublime Snippets
alias snippets="open ~/Library/Application\ Support/Sublime\ Text\ 2/Packages/User"

# Open finder to system Fonts
alias fonts="open /Library/Fonts"

# Clear Terminal screen & kill history
function cl {
	osascript -e 'tell application "System Events" to keystroke "k" using command down'
}

# Open a new Terminal (Tab or Window) & run passed commands
function term() {
	case $2 in
	"")
		osascript -e "
				tell application \"System Events\" to tell process \"Terminal\" to keystroke \"$1\" using command down
				tell application \"Terminal\" to do script \"cd \\\"$(PWD)\\\" && clear\" in selected tab of the front window
		" > /dev/null 2>&1
		;;
	*)
		osascript -e "
				tell application \"System Events\" to tell process \"Terminal\" to keystroke \"$1\" using command down
				tell application \"Terminal\" to do script \"cd \\\"$(PWD)\\\" && clear\" in selected tab of the front window
				tell application \"Terminal\" to do script \"$2\" in selected tab of the front window
		" > /dev/null 2>&1
	esac
}

# Open new Terminal Tab
function tab() {
	term t "$1"
}

# Open new Terminal Tab and Close Current Tab
function tabx() {
	term t "$1"
	exit
}

# Open new Terminal Window
function window() {
	term n "$1"
}

# Run HTTP-Server and open Chrome
function serve() {
	local port=$(portdiscovery)
	tab "http-server -p $port -c-1"
	chrome "http://$(hostname -s):$port"
}
